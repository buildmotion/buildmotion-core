!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("buildmotion-foundation"),require("buildmotion-logging"),require("@angular/router"),require("rxjs/add/operator/filter"),require("angular-rules-engine")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","buildmotion-foundation","buildmotion-logging","@angular/router","rxjs/add/operator/filter","angular-rules-engine"],t):t(e.buildmotionCore={},e.ng.core,e.ng.common,e.buildmotionFoundation,e.buildmotionLogging,e.ng.router,null,e.angularRulesEngine)}(this,function(e,t,o,r,n,i,s,a){"use strict";var g=function(){function e(){}return e.Information="alert-info",e.Warning="alert-warning",e.Danger="alert-danger",e.Success="alert-success",e}(),l=function(){return function(e,t,o,r){this.type=g.Information,this.messages=new Array,this.showAlert=!1,r&&(this.type=r),this.header=e,this.title=t,o&&(this.messages=o),this.header&&this.title&&(this.showAlert=!0)}}(),c=function(){function e(){this.alertNotification=new l("",""),this.hasMessage=!1}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"buildmotion-alert",template:'<div *ngIf="hasMessage " class="alert {{alertNotification.type}} " role="alert ">\n  <div class="container ">\n    <button type="button " class="close " data-dismiss="alert " aria-label="Close ">\n      <span aria-hidden="true ">\n        <i class="now-ui-icons ui-1_simple-remove "></i>\n      </span>\n    </button>\n    <div class="alert-icon ">\n      <i class="now-ui-icons ui-1_bell-53 "></i>\n    </div>\n    <strong>{{alertNotification.header}}</strong> :: {{alertNotification.title}}\n    <ul>\n      <li *ngFor="let message of alertNotification.messages ">{{message}}</li>\n    </ul>\n  </div>\n</div>'}]}],e.ctorParameters=function(){return[]},e.propDecorators={alertNotification:[{type:t.Input}],hasMessage:[{type:t.Input}]},e}(),u=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,r.BuildMotionFoundationModule,n.BuildMotionLoggingModule],declarations:[c],exports:[c],schemas:[t.NO_ERRORS_SCHEMA,t.CUSTOM_ELEMENTS_SCHEMA]}]}],e.ctorParameters=function(){return[]},e}(),p=function(){function e(e,t,o){this.loggingService=t,this.router=o,this.componentName=e,this.alertNotification=new l("","");var r=this.router.events.filter(function(e){return e instanceof i.NavigationEnd});r&&r instanceof i.NavigationEnd&&this.googleAnalyticsPageview(r)}return e.prototype.googleAnalyticsPageview=function(e){e&&e.urlAfterRedirects?(this.loggingService.log(this.componentName,n.Severity.Information,"Preparing to set [Google Analytics] page view for ["+e.urlAfterRedirects+"]."),window.ga("set","page",e.urlAfterRedirects),window.ga("send","pageview")):this.loggingService.log(this.componentName,n.Severity.Warning,"Failed to set [Google Analytics] page view.")},e.prototype.createErrorResponse=function(e){this.loggingService.log(this.componentName,n.Severity.Information,"Preparing to create error response for component.");var t=new r.ErrorResponse;return t.Message=e,t},e.prototype.handleServiceErrors=function(e,t){if(this.loggingService.log(this.componentName,n.Severity.Information,"Preparing to handle service errors for component."),t&&t.hasErrors()){this.loggingService.log(this.componentName,n.Severity.Information,"Retrieving error messages from the ServiceContext/ValidationContext;");var o=this.retrieveServiceContextErrorMessages(t);this.alertNotification=new l("Errors",e.Message,o,g.Warning)}else if(e&&e.Message){this.loggingService.log(this.componentName,n.Severity.Information,"Retrieving error messages from the [ErrorResponse].");var r=this.retrieveResponseErrorMessages(e);this.alertNotification=new l("Error",e.Message,r,g.Warning),this.loggingService.log(this.componentName,n.Severity.Error,"Error: "+e.Message)}},e.prototype.retrieveServiceContextErrorMessages=function(e){var t=Array();return e.Messages.forEach(function(e){e.MessageType===a.MessageType.Error&&e.DisplayToUser&&t.push(e.Message)}),t},e.prototype.retrieveResponseErrorMessages=function(e){var t=new Array;return e&&e.Errors&&e.Errors.forEach(function(e){e.DisplayToUser&&t.push(e.Message)}),t},e.prototype.resetAlertNotifications=function(){this.alertNotification=new l("","")},e.prototype.routeTo=function(e){try{this.router.navigate([e])}catch(t){this.loggingService.log(this.componentName,n.Severity.Error,"Error while attempting to navigate to ["+e+"] route from "+this.componentName+". Error: "+t.toString())}},e.prototype.showResponseErrors=function(e){this.handleServiceErrors(e,void 0)},e.prototype.finishRequest=function(e){this.loggingService.log(this.componentName,n.Severity.Information,this.componentName+": "+e)},e.prototype.showAlertMessage=function(e){alert(e)},e}();e.BuildMotionCoreModule=u,e.AlertComponent=c,e.AlertNotification=l,e.AlertTypes=g,e.ComponentBase=p,Object.defineProperty(e,"__esModule",{value:!0})});